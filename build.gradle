//noinspection GroovyUnusedAssignment
def getVersionName = { ->
    def os = System.getProperty("os.name").toLowerCase()
    def revision = new ByteArrayOutputStream()
    if (!os.contains("windows")) {
        exec {
            executable "/bin/sh"
            //noinspection GroovyAssignabilityCheck
            args "-c", "echo -n `git rev-list HEAD | wc -l | sed 's/^[ ^t]*//'`"
            standardOutput = revision;
        }
    } else {
        exec {
            executable "cmd"
            //noinspection GroovyAssignabilityCheck
            args "/c", "git rev-list HEAD | find /c /v \"\""
            standardOutput = revision;
        }
        revision = revision as String
        revision = revision.trim()
    }

    return revision
}

buildscript {
    repositories {
        jcenter()
        maven {
            url  "http://dl.bintray.com/feragusper/maven"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    }
}

allprojects {
    repositories {
        jcenter()
        maven {
            url  "http://dl.bintray.com/feragusper/maven"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}